/*
** EPITECH PROJECT, 2023
** EPITECH-JAM-MAY-PING-PONG-GAME [WSL: Ubuntu]
** File description:
** Core
*/

#ifndef CORE_HPP_
    #define CORE_HPP_
    #include "../Rendering/Sfml.hpp"
    #include "../GameLogic/PingPong.hpp"
    #include <string>
    #include <memory>
    #include <vector>

namespace PONG {
    enum MODE {
        COMPUTER,
        VERSUS
    };
    static const std::vector<std::string> basicMap = {
            "11111111111111111111111111111111111111",
            "11000000000000000000000000000000000001",
            "10000000000000000000000000000000000001",
            "10000000000000000000000000000000000001",
            "10000000000000000000000000000000000001"
            "00000000000000000000000000000000000000",
            "00000000000000000000000000000000000000",
            "00000000000000000000000000000000000000",
            "00000000000000000000000000000000000000",
            "00000000000000000000000000000000000000",
            "00000000000000000000000000000000000000",
            "00000000000000000000000000000000000000",
            "00000000000000000000000000000000000000",
            "00000000000000000000000000000000000000",
            "00000000000000000000000000000000000000",
            "00000000000000000000000000000000000000",
            "00000000000000000000000000000000000000",
            "00000000000000000000000000000000000000",
            "00000000000000000000000000000000000000",
            "00000000000000000000000000000000000000",
            "00000000000000000000000000000000000000",
            "00000000000000000000000000000000000000",
            "00000000000000000000000000000000000000",
            "00000000000000000000000000000000000000",
            "00000000000000000000000000000000000000",
            "00000000000000000000000000000000000000",
            "00000000000000000000000000000000000000",
            "00000000000000000000000000000000000000",
            "00000000000000000000000000000000000000",
            "11111111111111111111111111111111111111"
        };
    class Core {
        public:
            explicit Core(std::string arg) {
                gameMode = (arg == "AI") ? COMPUTER : VERSUS;
                m_renderer = std::make_shared<Renderer>();
             //   m_game = std::make_shared<Game>(MODE);
            }
            void run() {
                std::vector<Color, Pos> pixels;
                Pos pos(0, 0);
                Color color(0, 0, 0, 0, 255);
                for (const auto &row : basicMap) {
                    for (const auto &col : row) {
                        color = (col == '0') ? PONG::BLACK : PONG::WHITE;
                        pixels.push_back({color, pos});
                    }
                }
            }
            ~Core();
        protected:
        private:
        MODE gameMode;
        std::shared_ptr<Renderer> m_renderer;
        std::shared_ptr<Game> m_pong;
    };
}

#endif /* !CORE_HPP_ */
